from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from aiogram.enums.content_type import ContentType

from ai_states import AIAssistantState
from ai_provider_2 import ask_ai

router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    await state.clear()
    await state.set_state(AIAssistantState.waiting_for_documents)
    await state.update_data(documents=[])  # —Å—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
    await state.update_data(chat_history=[])  # –æ—á–∏—â–∞—î–º–æ —ñ—Å—Ç–æ—Ä—ñ—é —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è
    await message.answer(
        "üëã –ü—Ä–∏–≤—ñ—Ç! –Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ –∑ –∞–≤—Ç–æ—Å—Ç—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º.\n\n"
        "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª–∏ —Ñ–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞ üìÑ"
    )


@router.message(F.content_type.in_({ContentType.PHOTO, ContentType.DOCUMENT}))
async def handle_documents(message: Message, state: FSMContext):
    data = await state.get_data()
    documents = data.get("documents", [])

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º file_id
    file_id = (
        message.document.file_id if message.document
        else message.photo[-1].file_id
    )
    documents.append(file_id)
    await state.update_data(documents=documents)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è AI
    if len(documents) == 1:
        user_msg = "–Ø –Ω–∞–¥—ñ—Å–ª–∞–≤ —Ñ–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞."
    elif len(documents) == 2:
        user_msg = "–Ø –Ω–∞–¥—ñ—Å–ª–∞–≤ —Ñ–æ—Ç–æ —Ç–µ—Ö–ø–∞—Å–ø–æ—Ä—Ç–∞."
        await state.set_state(AIAssistantState.documents_received)
    else:
        user_msg = "–Ø –Ω–∞–¥—ñ—Å–ª–∞–≤ —â–µ –æ–¥–Ω–µ —Ñ–æ—Ç–æ."

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    ai_reply = await ask_ai(user_msg, state)
    await message.answer(ai_reply)


@router.message(F.text)
async def handle_text(message: Message, state: FSMContext):
    current_state = await state.get_state()

    if current_state == AIAssistantState.waiting_for_documents:
        ai_reply = await ask_ai(message.text, state)
        await message.answer(
            f"{ai_reply}\n\nüìé –ü–æ–∫–∏ —â–æ –Ω–∞–¥—ñ—à–ª–∏ —Ñ–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞ —Ç–∞ —Ç–µ—Ö–ø–∞—Å–ø–æ—Ä—Ç–∞, —â–æ–± —è –º—ñ–≥ –¥–æ–ø–æ–º–æ–≥—Ç–∏ –∫—Ä–∞—â–µ."
        )
    else:
        ai_reply = await ask_ai(message.text, state)
        await message.answer(ai_reply)
