import os
from uuid import uuid4
from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.types import FSInputFile

from ai_provider import ask_ai

router = Router()
TEMP_DIR = "temp"
os.makedirs(TEMP_DIR, exist_ok=True)

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    response = ask_ai("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ä–æ–∑–ø–æ—á–∞–≤ –¥—ñ–∞–ª–æ–≥. –ü—Ä–∏–≤—ñ—Ç–∞–π—Å—è —Ç–∞ –ø–æ–ø—Ä–æ—Å–∏ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏.")
    await message.answer(response)

@router.message(F.photo | F.document)
async def handle_documents(message: types.Message):
    user_id = message.from_user.id
    file = message.photo[-1] if message.photo else message.document
    file_name = f"{user_id}_{uuid4().hex}.jpg"
    path = os.path.join(TEMP_DIR, file_name)

    await message.bot.download(file, destination=path)

    # –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ AI, —â–æ –æ—Ç—Ä–∏–º–∞–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç
    doc_type = "—Ç–µ—Ö–ø–∞—Å–ø–æ—Ä—Ç" if "—Ç–µ—Ö" in file_name.lower() else "–ø–∞—Å–ø–æ—Ä—Ç"
    response = ask_ai(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–¥—ñ—Å–ª–∞–≤ —Ñ–æ—Ç–æ {doc_type}. –©–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏?")
    await message.answer(response)

@router.message(F.text)
async def handle_text(message: types.Message):
    await message.answer("ü§ñ –û–±—Ä–æ–±–ª—è—é –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è AI...")

    try:
        response = ask_ai(message.text)
    except Exception as e:
        await message.answer(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –¥–æ AI: {e}")
        return

    await message.answer(response.strip())
